/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKPACKER_H
#define _MOCKPACKER_H

#include "unity.h"
#include "stdint.h"
#include "Defs.h"
#include "LPC1768.h"
#include "Packer.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void MockPacker_Init(void);
void MockPacker_Destroy(void);
void MockPacker_Verify(void);




#define Packer_AddMsg_IgnoreAndReturn(cmock_retval) Packer_AddMsg_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Packer_AddMsg_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, char* cmock_to_return);
#define Packer_AddMsg_StopIgnore() Packer_AddMsg_CMockStopIgnore()
void Packer_AddMsg_CMockStopIgnore(void);
#define Packer_AddMsg_ExpectAnyArgsAndReturn(cmock_retval) Packer_AddMsg_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void Packer_AddMsg_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, char* cmock_to_return);
#define Packer_AddMsg_ExpectAndReturn(Cmd, Data, Len, cmock_retval) Packer_AddMsg_CMockExpectAndReturn(__LINE__, Cmd, Data, Len, cmock_retval)
void Packer_AddMsg_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char Cmd, char* Data, uint8_t Len, char* cmock_to_return);
#define Packer_AddMsg_ReturnThruPtr_Data(Data) Packer_AddMsg_CMockReturnMemThruPtr_Data(__LINE__, Data, sizeof(char))
#define Packer_AddMsg_ReturnArrayThruPtr_Data(Data, cmock_len) Packer_AddMsg_CMockReturnMemThruPtr_Data(__LINE__, Data, (int)(cmock_len * (int)sizeof(*Data)))
#define Packer_AddMsg_ReturnMemThruPtr_Data(Data, cmock_size) Packer_AddMsg_CMockReturnMemThruPtr_Data(__LINE__, Data, cmock_size)
void Packer_AddMsg_CMockReturnMemThruPtr_Data(UNITY_LINE_TYPE cmock_line, char* Data, int cmock_size);
#define Packer_AddMsg_IgnoreArg_Cmd() Packer_AddMsg_CMockIgnoreArg_Cmd(__LINE__)
void Packer_AddMsg_CMockIgnoreArg_Cmd(UNITY_LINE_TYPE cmock_line);
#define Packer_AddMsg_IgnoreArg_Data() Packer_AddMsg_CMockIgnoreArg_Data(__LINE__)
void Packer_AddMsg_CMockIgnoreArg_Data(UNITY_LINE_TYPE cmock_line);
#define Packer_AddMsg_IgnoreArg_Len() Packer_AddMsg_CMockIgnoreArg_Len(__LINE__)
void Packer_AddMsg_CMockIgnoreArg_Len(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
