/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKTIMER_H
#define _MOCKTIMER_H

#include "unity.h"
#include "stdint.h"
#include "Defs.h"
#include "LPC1768.h"
#include "Timer.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void MockTimer_Init(void);
void MockTimer_Destroy(void);
void MockTimer_Verify(void);




#define Timer_Init_Ignore() Timer_Init_CMockIgnore()
void Timer_Init_CMockIgnore(void);
#define Timer_Init_StopIgnore() Timer_Init_CMockStopIgnore()
void Timer_Init_CMockStopIgnore(void);
#define Timer_Init_Expect() Timer_Init_CMockExpect(__LINE__)
void Timer_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define Timer_SetStamp_Ignore() Timer_SetStamp_CMockIgnore()
void Timer_SetStamp_CMockIgnore(void);
#define Timer_SetStamp_StopIgnore() Timer_SetStamp_CMockStopIgnore()
void Timer_SetStamp_CMockStopIgnore(void);
#define Timer_SetStamp_ExpectAnyArgs() Timer_SetStamp_CMockExpectAnyArgs(__LINE__)
void Timer_SetStamp_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define Timer_SetStamp_Expect(Stamp) Timer_SetStamp_CMockExpect(__LINE__, Stamp)
void Timer_SetStamp_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t Stamp);
#define Timer_SetStamp_IgnoreArg_Stamp() Timer_SetStamp_CMockIgnoreArg_Stamp(__LINE__)
void Timer_SetStamp_CMockIgnoreArg_Stamp(UNITY_LINE_TYPE cmock_line);
#define Timer_GetStamp_IgnoreAndReturn(cmock_retval) Timer_GetStamp_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Timer_GetStamp_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define Timer_GetStamp_StopIgnore() Timer_GetStamp_CMockStopIgnore()
void Timer_GetStamp_CMockStopIgnore(void);
#define Timer_GetStamp_ExpectAndReturn(cmock_retval) Timer_GetStamp_CMockExpectAndReturn(__LINE__, cmock_retval)
void Timer_GetStamp_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define Timer_WaitMilli_Ignore() Timer_WaitMilli_CMockIgnore()
void Timer_WaitMilli_CMockIgnore(void);
#define Timer_WaitMilli_StopIgnore() Timer_WaitMilli_CMockStopIgnore()
void Timer_WaitMilli_CMockStopIgnore(void);
#define Timer_WaitMilli_ExpectAnyArgs() Timer_WaitMilli_CMockExpectAnyArgs(__LINE__)
void Timer_WaitMilli_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define Timer_WaitMilli_Expect(msec) Timer_WaitMilli_CMockExpect(__LINE__, msec)
void Timer_WaitMilli_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t msec);
#define Timer_WaitMilli_IgnoreArg_msec() Timer_WaitMilli_CMockIgnoreArg_msec(__LINE__)
void Timer_WaitMilli_CMockIgnoreArg_msec(UNITY_LINE_TYPE cmock_line);
#define Timer_WaitRemainder_IgnoreAndReturn(cmock_retval) Timer_WaitRemainder_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Timer_WaitRemainder_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define Timer_WaitRemainder_StopIgnore() Timer_WaitRemainder_CMockStopIgnore()
void Timer_WaitRemainder_CMockStopIgnore(void);
#define Timer_WaitRemainder_ExpectAnyArgsAndReturn(cmock_retval) Timer_WaitRemainder_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void Timer_WaitRemainder_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define Timer_WaitRemainder_ExpectAndReturn(StartStamp, msec, cmock_retval) Timer_WaitRemainder_CMockExpectAndReturn(__LINE__, StartStamp, msec, cmock_retval)
void Timer_WaitRemainder_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t StartStamp, uint32_t msec, uint32_t cmock_to_return);
#define Timer_WaitRemainder_IgnoreArg_StartStamp() Timer_WaitRemainder_CMockIgnoreArg_StartStamp(__LINE__)
void Timer_WaitRemainder_CMockIgnoreArg_StartStamp(UNITY_LINE_TYPE cmock_line);
#define Timer_WaitRemainder_IgnoreArg_msec() Timer_WaitRemainder_CMockIgnoreArg_msec(__LINE__)
void Timer_WaitRemainder_CMockIgnoreArg_msec(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
